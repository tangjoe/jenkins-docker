version: '3.3'
services:
  jenkins:
    image: "jenkinsdocker:2.235.3"
    container_name: jenkins
    networks:
      - jd_net
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - "jd_volume:/var/jenkins_home"
      - "./groovy:/var/jenkins_home/init.groovy.d"
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  sonarqube:
    image: "sonarqube:8.4.1-community"
    container_name: sonar
    networks:
      - jd_net
    ports:
      - "9000:9000"
      - "9092:9092"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgresql:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"
    volumes:
      - "sonarqube_volume:/opt/sonarqube"
    restart: always
    depends_on:
      - postgresql

  postgresql:
    image: "postgres:12.3"
    container_name: postgres
    networks:
      - jd_net
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - "postgresql_volume:/var/lib/postgresql"
    restart: always

volumes:
  jd_volume:
  sonarqube_volume:
  postgresql_volume:
networks:
  jd_net:
#   driver: bridge
